<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">

    <sys:Double x:Key="FlatButtonHeight" x:Shared="False">40</sys:Double>
    <sys:Double x:Key="FlatButtonFontSize" x:Shared="False">14</sys:Double>


    <Storyboard x:Key="FlatButtonMouseEnter" x:Shared="False">
        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                        To="{StaticResource FlatButtonBackgroundMouseEnter}"
                        FillBehavior="HoldEnd"
                        Duration="0:0:.15" />
    </Storyboard>
    <Storyboard x:Key="FlatButtonMouseLeave" x:Shared="False">
        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                        To="{StaticResource FlatButtonBackground}"
                        FillBehavior="HoldEnd"
                        Duration="0:0:.15" />
    </Storyboard>

    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="ButtonTemplate" x:Shared="False">
        <Grid>
            <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <controls:ContentControlEx x:Name="ContentPresenter"
                                                   Margin="{TemplateBinding BorderThickness}"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush8}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush7}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="FlatButtonTemplate" x:Shared="False">
        <Grid Background="{TemplateBinding Background}">
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard Storyboard="{StaticResource FlatButtonMouseEnter}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard Storyboard="{StaticResource FlatButtonMouseLeave}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.GotFocus">
                <BeginStoryboard Storyboard="{StaticResource FlatButtonMouseEnter}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.LostFocus">
                <BeginStoryboard Storyboard="{StaticResource FlatButtonMouseLeave}" />
            </EventTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource FlatButtonBackgroundMouseClickBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource FlatButtonForegroundMouseClickBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Button" x:Key="BaseButton" x:Shared="False">
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="controls:ControlsHelper.CornerRadius" Value="3" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource BaseButton}">
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}" Value="False">
                <Setter Property="Button.Background" Value="{DynamicResource GrayBrush2}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="FlatButton" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="{StaticResource FlatBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource FontForegroundBrush}" />
        <Setter Property="Padding" Value="{StaticResource FlatButtonPadding}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--Font styles-->
        <Setter Property="FontSize" Value="{StaticResource FlatButtonFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <!--Button template-->
        <Setter Property="Template" Value="{StaticResource FlatButtonTemplate}" />
    </Style>

</ResourceDictionary>