<controls:MetroWindow x:Class="ReportsOrganizer.UI.Views.Windows.MainWindowView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:lex="http://wpflocalizeextension.codeplex.com"
                      xmlns:taskBar="http://www.hardcodet.net/taskbar"
                      xmlns:prop="clr-namespace:ReportsOrganizer.UI.DependencyProperties"
                      xmlns:helper="clr-namespace:ReportsOrganizer.UI.Helpers"
                      xmlns:settingsViewModel="clr-namespace:ReportsOrganizer.UI.ViewModels.Settings"
                      xmlns:settingsView="clr-namespace:ReportsOrganizer.UI.Views.Settings"
                      mc:Ignorable="d"
                      DataContext="{Binding Path=MainWindow, Source={StaticResource ViewModelLocator}}"
                      Icon="../../App.ico"
                      Style="{StaticResource MetroWindow}"
                      Title="{StaticResource ProgramName}"
                      Visibility="{Binding WindowVisibility}"
                      WindowStartupLocation="CenterScreen"
                      WindowState="{Binding Path=CurrentWindowState}"
                      d:DesignHeight="{StaticResource WindowMinHeight}"
                      d:DesignWidth="{StaticResource WindowWidth}"
                      lex:ResxLocalizationProvider.DefaultAssembly="ReportsOrganizer.UI"
                      lex:ResxLocalizationProvider.DefaultDictionary="Strings"
                      prop:WindowProperties.BoundClosing="{Binding Path=WindowClosingCommand}">

    <controls:MetroWindow.Resources>
        <DataTemplate DataType="{x:Type settingsViewModel:SettingsViewModel}">
            <settingsView:SettingsView />
        </DataTemplate>
    </controls:MetroWindow.Resources>

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands ShowSeparators="False">
            <Button Command="{Binding Path=WindowOpenSettingsCommand}"
                    ToolTip="{lex:Loc General:Settings}">
                <iconPacks:PackIconMaterial Kind="Settings"
                                            Style="{StaticResource WindowCommand}" />
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <controls:MetroWindow.WindowButtonCommands>
        <controls:WindowButtonCommands Template="{DynamicResource MahApps.Metro.Templates.WindowButtonCommands.Win10}" />
    </controls:MetroWindow.WindowButtonCommands>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Header="{lex:Loc General:Settings}"
                             IsOpen="{Binding Path=SettingsIsOpen}"
                             Style="{StaticResource MetroFlyout}"
                             helper:FlyoutHelper.BackButtonVisibility="Visible"
                             Content="{Binding SettingsViewModel}">
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>



    <!--<controls:MetroWindow.Resources>
        <DataTemplate DataType="{x:Type vm:HomeViewModel}">
            <local:HomeView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:SettingsViewModel}">
            <local:SettingsView />
        </DataTemplate>
    </controls:MetroWindow.Resources>
    DataContext="{Binding Path=Main, Source={StaticResource ViewModelLocator}}"-->






    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <taskBar:TaskbarIcon IconSource="../../App.ico"
                             ToolTipText="{StaticResource ProgramName}"
                             DoubleClickCommand="{Binding Path=TaskbarIconDoubleClickCommand}">
            <taskBar:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{lex:Loc TaskbarIcon:Open}"
                              Command="{Binding Path=TaskbarIconOpenCommand}" />
                    <MenuItem Header="{lex:Loc TaskbarIcon:WriteReport}"
                              Command="{Binding Path=TaskbarIconWriteReportCommand}" />
                    <Separator />
                    <MenuItem Header="{lex:Loc TaskbarIcon:Exit}"
                              Command="{Binding Path=TaskbarIconExitCommand}" />
                </ContextMenu>
            </taskBar:TaskbarIcon.ContextMenu>
        </taskBar:TaskbarIcon>
        <!--<ContentControl Grid.Row="0"
                        Content="{Binding Navigation.CurrentPage}" />-->
        <StatusBar Grid.Row="1">
            <StatusBarItem Content="{StaticResource ProgramName}" />
            <Separator Style="{DynamicResource MetroStatusBarSeparator}" />
            <StatusBarItem Content="Version 1.0.0.0" />
        </StatusBar>
    </Grid>

</controls:MetroWindow>
