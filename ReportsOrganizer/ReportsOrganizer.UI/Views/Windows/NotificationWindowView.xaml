<controls:MetroWindow x:Class="ReportsOrganizer.UI.Views.Windows.NotificationWindowView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:lex="http://wpflocalizeextension.codeplex.com"
                      xmlns:prop="clr-namespace:ReportsOrganizer.UI.DependencyProperties"
                      lex:ResxLocalizationProvider.DefaultAssembly="ReportsOrganizer.Localization"
                      mc:Ignorable="d"
                      DataContext="{Binding Path=NotificationWindow, Source={StaticResource ViewModelLocator}}"
                      Visibility="{Binding Path=WindowVisibility, Mode=TwoWay}"
                      Style="{StaticResource MetroNotification}"
                      Title="NotificationWindowView"
                      Height="150" Width="400"
                      MinHeight="150" MinWidth="400"
                      prop:WindowProperties.BoundClosing="{Binding Path=WindowClosingCommand}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <TextBlock Text="Add note"
                   Grid.Row="0"
                   Grid.Column="0"
                   Grid.ColumnSpan="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top" />

        <ComboBox Width="Auto"
                  Grid.Row="1"
                  Grid.Column="0"
                  controls:TextBoxHelper.ClearTextButton="False"
                  controls:TextBoxHelper.Watermark="Project"
                  SelectedIndex="0"
                  ItemsSource="{Binding Path=ProjectList}"
                  SelectedItem="{Binding Path=SelectedProject}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=ShortName}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <Button Grid.Row="1"
                Grid.Column="1"
                Width="100"
                Content="Use previous"
                HorizontalAlignment="Right"
                Margin="10,0" 
                IsEnabled="{Binding Path=UsePreviousEnable}"
                Command="{Binding Path=UsePreviousCommand}" />
        <Button Grid.Row="1"
                Grid.Column="2"
                Width="100"
                Content="Postpone"
                HorizontalAlignment="Right" 
                Command="{Binding Path=PostponeCommand}" />

        <TextBox TextWrapping="Wrap"
                 Grid.ColumnSpan="3"
                 Grid.Column="0"
                 Grid.Row="2"
                 x:Name="Report"
                 Text="{Binding Path=Description}">
            <TextBox.Style>
                <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                    <Setter Property="controls:TextBoxHelper.ClearTextButton" Value="True" />
                    <Style.Triggers>
                        <Trigger Property="controls:TextBoxHelper.HasText" Value="False">
                            <Setter Property="controls:TextBoxHelper.ClearTextButton" Value="False" />
                            <Setter Property="controls:TextBoxHelper.Watermark" Value="Now enter some text..." />
                        </Trigger>
                        <Trigger Property="controls:TextBoxHelper.HasText" Value="True">
                            <Setter Property="controls:TextBoxHelper.ClearTextButton" Value="True" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBlock Grid.Column="0"
                   Grid.Row="3"
                   VerticalAlignment="Center"
                   Text="{Binding Text.Length, ElementName=Report, StringFormat={}{0}/125}" />

        <controls:TimePicker Grid.Column="1"
                             Grid.Row="3"
                             HandVisibility="HourMinute"
                             PickerVisibility="HourMinute"
                             IsClockVisible="False"
                             Culture="{Binding Path=DurationCultureInfo}"
                             SelectedTime="{Binding Path=SelectedTime}"/>

        <Button Grid.Row="3"
                Grid.Column="2"
                Width="40"
                Content="OK"
                HorizontalAlignment="Right"
                Command="{Binding Path=OkCommand}" />

        <!--<StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button Content="{lex:Loc General:GetPrevious}"
                   Command="{Binding Path=NotificationWindowGetPreviousCommand}"
                   Style="{StaticResource NotificationWindowButtonPrev}" Width="90" Height="28" />
            <Button Content="{lex:Loc General:Postpone}"
                    Command="{Binding Path=NotificationWindowPostponeCommand}"
                    Style="{StaticResource NotificationWindowButtonPostpone}" Height="28" Width="70" />

        </StackPanel>
        <TextBox x:Name="Report" 
                 Grid.Row="1" 
                 materialDesign:HintAssist.Hint="{lex:Loc General:WriteReport}"
                 Style="{StaticResource NotificationWindowReport}" 
                 Text="{Binding Path=MultilineReportText}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom" VerticalAlignment="Stretch"/>
        <Button Content="{lex:Loc General:OK}" 
                Grid.Row="2"
                Command="{Binding Path=NotificationWindowOKCommand}"
                Style="{StaticResource NotificationWindowButtonOK}"/>
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Label x:Name="CharCounterLbl" 
                   Content="{Binding Text.Length, ElementName=Report}"
                   Style="{StaticResource NotificationWindowReportLength}" />
            <Label x:Name="CharSplitterLbl" 
                   Content="/"
                   Style="{StaticResource NotificationWindowReportLength}" />
            <Label x:Name="MaxCharLbl" 
                   Content="125"
                   Style="{StaticResource NotificationWindowReportLength}" />
        </StackPanel>-->
    </Grid>
</controls:MetroWindow>
